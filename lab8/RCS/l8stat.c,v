head	1.5;
access;
symbols;
locks;
comment	@ * @;


1.5
date	2012.11.27.21.34.04;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.11.27.21.33.43;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.11.27.21.31.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.11.27.18.16.12;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.11.27.18.15.50;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@//$Id: 
#include <libgen.h>
#include <stdlib.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <unistd.h>
#include <time.h>
#include <errno.h>
#include <string.h>

int Exit_Status = EXIT_SUCCESS;
char *Exec_Name;
/*struct stat {
   dev_t     st_dev;
   ino_t     st_ino;
   mode_t    st_mode;
   nlink_t   st_nlink;
   uid_t     st_uid;
   gid_t     st_gid;
   dev_t     st_rdev;
   off_t     st_size;
   blksize_t st_blksize;
   blkcnt_t  st_blocks;
   time_t    st_atime;
   time_t    st_mtime;
   time_t    st_ctime;
};
*/
int main (int argc, char **argv){
   Exec_Name = basename (argv[0]);
   for (int i = 1; i < argc ; ++i){
   FILE *file = fopen (argv[i], "r");
   if (file == NULL){
      fflush (NULL);
      fprintf (stderr, "%s: %s: %s\n",
               Exec_Name, argv[i], strerror (errno));
      fflush (NULL);
      Exit_Status = EXIT_FAILURE;
      continue;
   }
   char buffer[1024];
   struct stat buf;
   struct tm *tmp;
   lstat(argv[1], &buf);
   time_t t = buf.st_mtime;
   tmp = localtime(&t);
   off_t size = buf.st_size;
   mode_t mode = buf.st_mode;
   if ((time(NULL)-buf.st_mtime)/86400 < 180)
   strftime (buffer, sizeof(buffer), "%b %e %R", tmp);
   else
   strftime (buffer, sizeof(buffer), "%b %e  %Y", tmp);
   printf ("%lo   %d  %s  %s  \n", mode, size, buffer, argv[1]);
   
   }
   return Exit_Status;
}
@


1.4
log
@-
@
text
@d1 1
a1 1
//$
@


1.3
log
@-
@
text
@d1 1
a1 1
//$Id
@


1.2
log
@-
@
text
@d1 3
a3 2
//$Id:

d8 3
d12 3
a14 2
typedef struct stat *stat_ref;
struct stat {
d29 29
a57 6

int main (int argc, **argv){
   stat_ref stat = malloc(sizeof(struct stat));
   int lstat(argv[1], stat);

return Exit_Status;
@


1.1
log
@-
@
text
@d1 1
a1 1
$Id:
@
