head	1.2;
access;
symbols;
locks;
comment	@ * @;


1.2
date	2008.02.15.20.57.43;	author -;	state -;
branches;
next	1.1;

1.1
date	2008.02.15.20.51.49;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@// $Id: auxlib.h,v 1.1 2008-02-15 12:51:49-08 - - $

#ifndef __AUXLIB_H__
#define __AUXLIB_H__

//
// DESCRIPTION
//    Auxiliary library containing miscellaneous useful things.
//

//
// Miscellaneous useful typedefs.
//

typedef enum {FALSE = 0, TRUE = 1} bool;
typedef char *cstring;
typedef const char *constring;

//
// Error message and exit code utility.
//

void set_progname (cstring arg0);
   //
   // Sets the program name for error messages printed by this
   // library.  Usually called from main with argv[0].
   //

void eprintf (constring format, ...);
   //
   // Print an error message according to the printf format
   // specified. Sets the exit code to indicate failure.
   // Precedes the message by the program name if the format
   // begins with the characters `%:'.
   //

void syseprintf (constring object);
   //
   // Print a message resulting from a bad system call.  The
   // object is the name of the object causing the problem and
   // the reason is taken from the external variable errno.
   //

int get_exitcode (void);
   //
   // Returns the exit code set by the above functions.  Default
   // is EXIT_SUCCESS, but any call to eprintf causes it to be
   // set to EXIT_FAILURE.  The last statement in function `main'
   // should be:  ``return get_exitcode();''.
   //

//
// Support for stub messages.
//
#define STUBPRINTF(...) \
        __stubprintf (__FILE__, __LINE__, __func__, __VA_ARGS__)
void __stubprintf (char *file, int line, const char *func,
                   char *format, ...);

#endif

@


1.1
log
@-
@
text
@d1 1
a1 1
/* $Id: auxlib.h,v 1.1 2007-02-15 16:05:37-08 - - $ */
d6 8
a13 8
/*
* DESCRIPTION
*    Auxiliary library containing miscellaneous useful things.
*/

/*
* Miscellaneous useful typedefs.
*/
d19 3
a21 3
/*
* Error message and exit code utility.
*/
d24 4
a27 4
   /*
   * Sets the program name for error messages printed by this
   * library.  Usually called from main with argv[0].
   */
d30 6
a35 6
   /*
   * Print an error message according to the printf format
   * specified. Sets the exit code to indicate failure.
   * Precedes the message by the program name if the format
   * begins with the characters `%:'.
   */
d38 5
a42 5
   /*
   * Print a message resulting from a bad system call.  The
   * object is the name of the object causing the problem and
   * the reason is taken from the external variable errno.
   */
d45 10
a54 20
   /*
   * Returns the exit code set by the above functions.  Default
   * is EXIT_SUCCESS, but any call to eprintf causes it to be
   * set to EXIT_FAILURE.  The last statement in function `main'
   * should be:  ``return get_exitcode();''.
   */

/*
* Redefinition of a few functions to keep lint from whining about
* ``function returns value which is always ignored''
*/

#define xfflush   (void)fflush
#define xfprintf  (void)fprintf
#define xprintf   (void)printf
#define xvfprintf (void)vfprintf

/*
* Support for stub messages.
*/
@
