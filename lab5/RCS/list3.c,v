head	1.8;
access;
symbols;
locks;
comment	@ * @;


1.8
date	2012.11.06.19.33.50;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.11.06.19.33.31;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.11.06.19.14.32;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.11.06.19.14.18;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.11.06.19.13.57;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.11.06.19.04.40;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.11.06.18.57.03;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.11.06.18.44.25;	author -;	state -;
branches;
next	;


desc
@@


1.8
log
@-
@
text
@// $Id: list3.c,v 1.7 2012-11-06 11:33:31-08 - - $

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>

typedef struct node *node_ref;
struct node {
   char *word;
   node_ref link;
};

int main (int argc, char **argv) {
   node_ref head=NULL;
   for (int argi = 0; argi < argc; ++argi) {
      node_ref node = malloc (sizeof (struct node));
      assert (node != NULL);
      node->word = argv[argi];
      node->link = head;
      head = node;
   }
   for (node_ref curr = head; curr->link != NULL; curr = curr->link) {
      printf ("%p->node {word=%p->[%s], link=%p}\n",
              curr, curr->word, curr->word, curr->link);
   }
   return 9;
}
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.6 2012-11-06 11:14:32-08 - - $
d15 1
a15 1
   for (int argi = 0; argi < c; ++argi) {
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.5 2012-11-06 11:14:18-08 - - $
d14 2
a15 2
   node_ref head;
   for (int argi = 0; argi < 5; ++argi) {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.4 2012-11-06 11:13:57-08 - - $
d24 1
a24 1
              curr, curr->word, curr->*word, curr->link);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.3 2012-11-06 11:04:40-08 - - $
d24 1
a24 1
              curr, curr->*word, curr->word, curr->link);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.2 2012-11-06 10:57:03-08 - - $
d24 1
a24 1
              curr, curr->word, curr->word, curr->link);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: list3.c,v 1.1 2012-11-06 10:44:25-08 - - $
d16 1
a16 1
      *node_ref node = malloc (sizeof (node_ref));
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: list2.c,v 1.1 2012-11-06 10:26:11-08 - - $
d16 1
a16 1
      node_ref node = malloc (sizeof (node_ref));
@
