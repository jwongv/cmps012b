head	1.5;
access;
symbols;
locks;
comment	@ * @;


1.5
date	2012.11.02.02.33.32;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.02.15.04.49.59;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.02.15.04.44.24;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.02.15.03.53.18;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.02.15.03.50.35;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@/* $Id: main.c,v 1.4 2012-02-14 20:49:59-08 - - $ */

/*
* Silly main program which just creates an intx box, puts a
* number in it, gets it back out, and deletes the box.
* Run with bcheck to verify no memory leaks.
*/

#include <errno.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/time.h>
#include <time.h>

#include "intx.h"

char *execname = NULL;

int main (int argc, char **argv) {
   argc = argc; // Avoid:16: warning: unused parameter 'argc'
   execname = basename (argv[0]);

   /* Declare the box and initialize it.  */
   intx_ref box = new_intx();
   printf ("box = %p\n", box);

   /* Perform a couple of operations on it.  */
   put_intx (box, 1024);
   printf ("box value is %d\n", get_intx (box));

   /* Free up the box and set the handle to NULL to avoid a dangle. */
   free_intx (box);
   box = NULL;

   return EXIT_SUCCESS;
}

@


1.4
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.3 2012-02-14 20:44:24-08 - - $ */
a20 16
void say_when (char *when) {
   struct timeval timeval;
   int retcode = gettimeofday (&timeval, NULL);
   if (retcode != 0) {
      fprintf (stderr, "%s: gettimeofday: %s\n",
               execname, strerror (errno));
   }
   struct tm *tm_buffer = localtime (&timeval.tv_sec);
   char buffer1[64];
   char buffer2[64];
   strftime (buffer1, sizeof buffer1, "%a %b %e %T", tm_buffer);
   strftime (buffer2, sizeof buffer2, " %Z %Y", tm_buffer);
   printf ("%s: %s: %s.%06ld %s\n", execname, when,
           buffer1, timeval.tv_usec, buffer2);
}

a23 1
   say_when ("starting");
a36 2
   /* OK! */
   say_when ("finished");
@


1.3
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.2 2012-02-14 19:53:18-08 - - $ */
d9 1
d13 1
d23 6
a28 3
   gettimeofday (&timeval, NULL);
   struct tm tm_buffer;
   localtime_r (&timeval.tv_sec, &tm_buffer);
d31 2
a32 2
   strftime (buffer1, sizeof buffer1, "%a %b %e %T", &tm_buffer);
   strftime (buffer2, sizeof buffer2, " %Z %Y", &tm_buffer);
@


1.2
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.1 2012-02-14 19:50:35-08 - - $ */
a14 1
#include "bool.h"
@


1.1
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.1 2011-04-29 19:53:56-07 - - $ */
d15 1
a15 1
#include "auxlib.h"
@
