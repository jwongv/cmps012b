head	1.32;
access;
symbols;
locks;
comment	@ * @;


1.32
date	2012.11.24.06.50.15;	author -;	state -;
branches;
next	1.31;

1.31
date	2012.11.20.19.31.13;	author -;	state -;
branches;
next	1.30;

1.30
date	2012.11.20.19.23.03;	author -;	state -;
branches;
next	1.29;

1.29
date	2012.11.20.19.22.53;	author -;	state -;
branches;
next	1.28;

1.28
date	2012.11.20.19.16.59;	author -;	state -;
branches;
next	1.27;

1.27
date	2012.11.20.19.16.24;	author -;	state -;
branches;
next	1.26;

1.26
date	2012.11.20.19.16.14;	author -;	state -;
branches;
next	1.25;

1.25
date	2012.11.20.19.15.55;	author -;	state -;
branches;
next	1.24;

1.24
date	2012.11.20.19.08.32;	author -;	state -;
branches;
next	1.23;

1.23
date	2012.11.20.18.52.14;	author -;	state -;
branches;
next	1.22;

1.22
date	2012.11.20.18.50.07;	author -;	state -;
branches;
next	1.21;

1.21
date	2012.11.20.18.49.53;	author -;	state -;
branches;
next	1.20;

1.20
date	2012.11.20.18.46.58;	author -;	state -;
branches;
next	1.19;

1.19
date	2012.11.20.18.44.42;	author -;	state -;
branches;
next	1.18;

1.18
date	2012.11.20.18.43.58;	author -;	state -;
branches;
next	1.17;

1.17
date	2012.11.20.18.43.18;	author -;	state -;
branches;
next	1.16;

1.16
date	2012.11.20.18.42.16;	author -;	state -;
branches;
next	1.15;

1.15
date	2012.11.20.18.39.36;	author -;	state -;
branches;
next	1.14;

1.14
date	2012.11.20.18.33.04;	author -;	state -;
branches;
next	1.13;

1.13
date	2012.11.20.18.21.41;	author -;	state -;
branches;
next	1.12;

1.12
date	2012.11.20.18.21.17;	author -;	state -;
branches;
next	1.11;

1.11
date	2012.11.20.18.20.51;	author -;	state -;
branches;
next	1.10;

1.10
date	2012.11.20.18.20.38;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.11.20.18.16.53;	author -;	state -;
branches;
next	1.8;

1.8
date	2012.11.20.18.15.47;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.11.20.18.15.24;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.02.23.03.23.35;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.02.23.03.22.39;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.02.23.03.22.13;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.02.15.04.43.22;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.02.15.04.33.11;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.02.15.04.32.33;	author -;	state -;
branches;
next	;


desc
@@


1.32
log
@-
@
text
@/* $Id: main.c,v 1.31 2012-11-20 11:31:13-08 - - $ */
// Jacky Wong - jagwong@@ucsc.edu
// ID: 1281439


#include <assert.h>
#include <errno.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "queue.h"

char *execname = NULL;
int exit_status = EXIT_SUCCESS;

void putinqueue (queue_ref queue, FILE *input, char *filename) {
   char buffer[1024];
   for (int linenr = 1; ; ++linenr) {
      char *linepos = fgets (buffer, sizeof buffer, input);
      if (linepos == NULL) break;
      linepos = strchr (buffer, '\n');
      if (linepos == NULL) {
         fflush (NULL);
         fprintf (stderr, "%s: %s[%d]: unterminated line\n",
                  execname, filename, linenr);
         fflush (NULL);
         exit_status = EXIT_FAILURE;
      }else {
         *linepos = '\0';
      }
      linepos = strdup (buffer);
      assert (linepos != NULL);
      insert_queue (queue, linepos);
   }
}

void putfileinqueue (queue_ref queue, char *filename) {
   FILE *input = fopen (filename, "r");
   if (input == NULL) {
      fflush (NULL);
      fprintf (stderr, "%s: %s: %s\n",
               execname, filename, strerror (errno));
      fflush (NULL);
      exit_status = EXIT_FAILURE;
   }else {
      putinqueue (queue, input, filename);
      fclose (input);
   }
}


int main (int argc, char **argv) {
   execname = basename (argv[0]);
   queue_ref queue = new_queue();

   if (argc < 2) {
      putinqueue (queue, stdin, "-");
   }else {
      for (int argi = 1; argi < argc; ++argi) {
         if (strcmp (argv[argi], "-") == 0) {
            putinqueue (queue, stdin, "-");
         }else {
            putfileinqueue (queue, argv[argi]);
         }
      }
   }

   while (! isempty_queue (queue)) { 
      char *oldstring = remove_queue(queue);
      printf ("%s\n", oldstring);
      free (oldstring);
   }

   free_queue(queue);

   return exit_status;
}

@


1.31
log
@-
@
text
@d1 4
a4 1
/* $Id: main.c,v 1.30 2012-11-20 11:23:03-08 - - $ */
@


1.30
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.29 2012-11-20 11:22:53-08 - - $ */
d68 3
a70 3
      char *rawr = remove_queue(queue);
      printf ("%s\n", rawr);
      free (rawr);
@


1.29
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.28 2012-11-20 11:16:59-08 - - $ */
d68 1
a68 1
      char *rawr = remove_queue(queue));
@


1.28
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.27 2012-11-20 11:16:24-08 - - $ */
d68 3
a70 2
      
      printf ("%s\n", remove_queue (queue));
@


1.27
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.26 2012-11-20 11:16:14-08 - - $ */
d68 1
a68 1
      free(queue->front->&tag);
@


1.26
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.25 2012-11-20 11:15:55-08 - - $ */
d68 1
a68 1
      free(queue->front->*tag);
@


1.25
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.24 2012-11-20 11:08:32-08 - - $ */
d68 1
a68 1
      free(queue->front->tag);
@


1.24
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.23 2012-11-20 10:52:14-08 - - $ */
d68 1
a68 1
      
@


1.23
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.22 2012-11-20 10:50:07-08 - - $ */
a32 1
      free(linepos);
d68 1
@


1.22
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.21 2012-11-20 10:49:53-08 - - $ */
d33 1
a68 1
      queuenode_ref oldnode = front->item;
@


1.21
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.20 2012-11-20 10:46:58-08 - - $ */
d68 1
a68 1
      queuenode oldnode = front->item;
@


1.20
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.19 2012-11-20 10:44:42-08 - - $ */
d68 1
a68 1
      
@


1.19
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.18 2012-11-20 10:43:58-08 - - $ */
d68 1
d72 1
a72 1
//   free_queue(queue);
@


1.18
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.17 2012-11-20 10:43:18-08 - - $ */
d71 1
a71 1
   free_queue(queue);
@


1.17
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.16 2012-11-20 10:42:16-08 - - $ */
d67 1
a67 2
   while (! isempty_queue (queue)) {
      
@


1.16
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.15 2012-11-20 10:39:36-08 - - $ */
d66 1
a66 1
   queue_ref old = queue;
d72 1
a72 1
   free_queue(old);
@


1.15
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.14 2012-11-20 10:33:04-08 - - $ */
d66 1
a66 1

d68 1
d72 1
a72 1
//   free_queue(queue);
@


1.14
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.13 2012-11-20 10:21:41-08 - - $ */
d71 1
a71 1
   free_queue(queue);
@


1.13
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.12 2012-11-20 10:21:17-08 - - $ */
a67 1
      queuenode_ref rawr;
a68 1
      free (somestring);
@


1.12
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.11 2012-11-20 10:20:51-08 - - $ */
d68 1
a68 1
      char *somestring = queue->front->item;
@


1.11
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.10 2012-11-20 10:20:38-08 - - $ */
d68 1
a68 1
      char *somestring = queue->front;
@


1.10
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.9 2012-11-20 10:16:53-08 - - $ */
d68 1
a68 1
      *char somestring = queue->front;
@


1.9
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.8 2012-11-20 10:15:47-08 - - $ */
d68 1
a68 1
      queuenode_ref oldnode = queue->front;
d70 1
a70 1
      free (oldnode->item);
@


1.8
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.7 2012-11-20 10:15:24-08 - - $ */
d68 1
d70 1
@


1.7
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.6 2012-02-22 19:23:35-08 - - $ */
d71 1
a71 1
   free_queue(queue_ref queue);
@


1.6
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.5 2012-02-22 19:22:39-08 - - $ */
d71 2
@


1.5
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.4 2012-02-22 19:22:13-08 - - $ */
d17 1
a17 2
   int linenr;
   for (linenr = 1; ; ++linenr) {
d29 1
a29 1
      };
d33 1
a33 1
   };
d47 1
a47 1
   };
d63 3
a65 3
         };
      };
   };
d69 1
a69 1
   };
@


1.4
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.3 2012-02-14 20:43:22-08 - - $ */
d4 2
a7 1
#include <errno.h>
d59 1
a59 2
      int argi;
      for (argi = 1; argi < argc; ++argi) {
@


1.3
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.2 2012-02-14 20:33:11-08 - - $ */
d52 1
a52 1
   execname = argv[0];
@


1.2
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.1 2012-02-14 20:32:33-08 - - $ */
a8 1
#include "bool.h"
@


1.1
log
@-
@
text
@d1 1
a1 1
/* $Id: main.c,v 1.4 2012-02-14 20:32:06-08 - - $ */
d51 1
@
